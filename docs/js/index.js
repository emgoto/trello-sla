/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _trello_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trello-util */ \"./src/trello-util.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/util.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nwindow.Promise = TrelloPowerUp.Promise;\n/**\n * When the page first renders, card-badges will be called for all the cards on the board.\n * Then board-buttons will be called. We don't want to spam the actions API for each card,\n * so we give the responsbility for calling the endpoint to the board-buttons.\n *\n * Later, if a user moves a card between lists, card-badges will be called and we'd want to allow\n * the card-badges to then call the API as needed.\n */\nlet allowCardAPI = false;\nsetTimeout(() => { allowCardAPI = true; }, 10000);\nTrelloPowerUp.initialize({\n    // This only gets called on initial load\n    'board-buttons': function (t) {\n        Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"updateAllConfigs\"])(t);\n        return [{\n                icon: {\n                    dark: `${window.location}img/stopwatch.svg`,\n                    light: `${window.location}img/stopwatch.svg`,\n                },\n                text: 'SLAs',\n                callback: () => t.modal({\n                    url: './settings.html',\n                    height: 360,\n                    fullscreen: false,\n                    title: 'SLAs for Trello'\n                }),\n                condition: 'edit'\n            }];\n    },\n    // This will get called each time a card is moved between lists, or t.set is called\n    'card-badges': function (t) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t).then(configs => {\n                if (!configs) {\n                    return [];\n                }\n                return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getSlaData\"])(t).then((data) => __awaiter(this, void 0, void 0, function* () {\n                    if (allowCardAPI) {\n                        const actions = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getCardActions\"])(t);\n                        Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"updateConfigs\"])(t, configs, data || {}, actions);\n                    }\n                    return !data ? [] : Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRunningSlas\"])(data, configs, false);\n                }));\n            });\n        });\n    },\n    // Show running and completed SLAs on back of card\n    'card-detail-badges': function (t) {\n        return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getToken\"])(t).then(token => {\n            if (!token) {\n                return [];\n            }\n            return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getSlaData\"])(t).then((data) => {\n                if (!data) {\n                    return [];\n                }\n                return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t).then((configs) => {\n                    return !configs ? [] : Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getRunningSlas\"])(data, configs, true);\n                });\n            }, 'authorization-status', function (t) {\n                return Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getToken\"])(t)\n                    .then(function (authToken) {\n                    return { authorized: authToken != null };\n                });\n            }, 'show-authorization', function (t) {\n                return t.popup({\n                    title: 'SLAs for Trello',\n                    url: './auth.html',\n                    height: 100,\n                });\n            });\n        }, {\n            appKey: '652d72f229f65b3457533bd55fdcf436',\n            appName: 'SLAs for Trello'\n        });\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LnRzP2M2YWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2FyZEFjdGlvbnMsIGdldFNsYURhdGEsIGdldENvbmZpZ3VyYXRpb25zLCBnZXRUb2tlbiB9IGZyb20gJy4vdHJlbGxvLXV0aWwnO1xuaW1wb3J0IHsgZ2V0UnVubmluZ1NsYXMsIHVwZGF0ZUNvbmZpZ3MsIHVwZGF0ZUFsbENvbmZpZ3MgfSBmcm9tICcuL3V0aWwnO1xuXG5kZWNsYXJlIGNvbnN0IFRyZWxsb1Bvd2VyVXA6IGFueTtcbndpbmRvdy5Qcm9taXNlID0gVHJlbGxvUG93ZXJVcC5Qcm9taXNlO1xuXG4vKipcbiAqIFdoZW4gdGhlIHBhZ2UgZmlyc3QgcmVuZGVycywgY2FyZC1iYWRnZXMgd2lsbCBiZSBjYWxsZWQgZm9yIGFsbCB0aGUgY2FyZHMgb24gdGhlIGJvYXJkLlxuICogVGhlbiBib2FyZC1idXR0b25zIHdpbGwgYmUgY2FsbGVkLiBXZSBkb24ndCB3YW50IHRvIHNwYW0gdGhlIGFjdGlvbnMgQVBJIGZvciBlYWNoIGNhcmQsXG4gKiBzbyB3ZSBnaXZlIHRoZSByZXNwb25zYmlsaXR5IGZvciBjYWxsaW5nIHRoZSBlbmRwb2ludCB0byB0aGUgYm9hcmQtYnV0dG9ucy5cbiAqIFxuICogTGF0ZXIsIGlmIGEgdXNlciBtb3ZlcyBhIGNhcmQgYmV0d2VlbiBsaXN0cywgY2FyZC1iYWRnZXMgd2lsbCBiZSBjYWxsZWQgYW5kIHdlJ2Qgd2FudCB0byBhbGxvd1xuICogdGhlIGNhcmQtYmFkZ2VzIHRvIHRoZW4gY2FsbCB0aGUgQVBJIGFzIG5lZWRlZC5cbiAqL1xubGV0IGFsbG93Q2FyZEFQSSA9IGZhbHNlO1xuc2V0VGltZW91dCgoKSA9PiB7YWxsb3dDYXJkQVBJID0gdHJ1ZTt9LCAxMDAwMCk7XG5cblRyZWxsb1Bvd2VyVXAuaW5pdGlhbGl6ZSh7XG4gIC8vIFRoaXMgb25seSBnZXRzIGNhbGxlZCBvbiBpbml0aWFsIGxvYWRcbiAgJ2JvYXJkLWJ1dHRvbnMnOiBmdW5jdGlvbiAodCkge1xuICAgIHVwZGF0ZUFsbENvbmZpZ3ModCk7XG5cbiAgICByZXR1cm4gW3tcbiAgICAgIGljb246IHtcbiAgICAgICAgZGFyazogYCR7d2luZG93LmxvY2F0aW9ufWltZy9zdG9wd2F0Y2guc3ZnYCxcbiAgICAgICAgbGlnaHQ6IGAke3dpbmRvdy5sb2NhdGlvbn1pbWcvc3RvcHdhdGNoLnN2Z2AsXG4gICAgICB9LFxuICAgICAgdGV4dDogJ1NMQXMnLFxuICAgICAgY2FsbGJhY2s6ICgpOiB2b2lkID0+IHQubW9kYWwoe1xuICAgICAgICB1cmw6ICcuL3NldHRpbmdzLmh0bWwnLFxuICAgICAgICBoZWlnaHQ6IDM2MCxcbiAgICAgICAgZnVsbHNjcmVlbjogZmFsc2UsXG4gICAgICAgIHRpdGxlOiAnU0xBcyBmb3IgVHJlbGxvJ1xuICAgICAgfSksXG4gICAgICBjb25kaXRpb246ICdlZGl0J1xuICAgIH1dO1xuICB9LFxuICAvLyBUaGlzIHdpbGwgZ2V0IGNhbGxlZCBlYWNoIHRpbWUgYSBjYXJkIGlzIG1vdmVkIGJldHdlZW4gbGlzdHMsIG9yIHQuc2V0IGlzIGNhbGxlZFxuICAnY2FyZC1iYWRnZXMnOiBhc3luYyBmdW5jdGlvbiAodCkge1xuICAgIHJldHVybiBnZXRDb25maWd1cmF0aW9ucyh0KS50aGVuKGNvbmZpZ3MgPT4ge1xuICAgICAgaWYgKCFjb25maWdzKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGdldFNsYURhdGEodCkudGhlbihhc3luYyAoZGF0YSkgPT4ge1xuICAgICAgICBpZiAoYWxsb3dDYXJkQVBJKSB7XG4gICAgICAgICAgY29uc3QgYWN0aW9ucyA9IGF3YWl0IGdldENhcmRBY3Rpb25zKHQpO1xuICAgICAgICAgIHVwZGF0ZUNvbmZpZ3ModCwgY29uZmlncywgZGF0YSB8fCB7fSwgYWN0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICFkYXRhID8gW10gOiBnZXRSdW5uaW5nU2xhcyhkYXRhLCBjb25maWdzLCBmYWxzZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgLy8gU2hvdyBydW5uaW5nIGFuZCBjb21wbGV0ZWQgU0xBcyBvbiBiYWNrIG9mIGNhcmRcbiAgJ2NhcmQtZGV0YWlsLWJhZGdlcyc6IGZ1bmN0aW9uICh0KSB7XG4gICAgcmV0dXJuIGdldFRva2VuKHQpLnRoZW4odG9rZW4gPT4ge1xuICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgICByZXR1cm4gZ2V0U2xhRGF0YSh0KS50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0Q29uZmlndXJhdGlvbnModCkudGhlbigoY29uZmlncykgPT4ge1xuICAgICAgICAgIHJldHVybiAhY29uZmlncyA/IFtdIDogZ2V0UnVubmluZ1NsYXMoZGF0YSwgY29uZmlncywgdHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgJ2F1dGhvcml6YXRpb24tc3RhdHVzJzogZnVuY3Rpb24odCl7XG4gICAgICAgIHJldHVybiBnZXRUb2tlbih0KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oYXV0aFRva2VuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgYXV0aG9yaXplZDogYXV0aFRva2VuICE9IG51bGwgfTtcbiAgICAgICAgICAgIH0pO1xuICAgIH0sXG4gICAgJ3Nob3ctYXV0aG9yaXphdGlvbic6IGZ1bmN0aW9uKHQpe1xuICAgICAgICByZXR1cm4gdC5wb3B1cCh7XG4gICAgICAgICAgICB0aXRsZTogJ1NMQXMgZm9yIFRyZWxsbycsXG4gICAgICAgICAgICB1cmw6ICcuL2F1dGguaHRtbCcsXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCxcbiAgICAgICAgfSk7XG4gICAgfSAgXG59LFxue1xuICAgIGFwcEtleTogJzY1MmQ3MmYyMjlmNjViMzQ1NzUzM2JkNTVmZGNmNDM2JyxcbiAgICBhcHBOYW1lOiAnU0xBcyBmb3IgVHJlbGxvJ1xufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFHQTtBQUVBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFEQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/trello-util.ts":
/*!****************************!*\
  !*** ./src/trello-util.ts ***!
  \****************************/
/*! exports provided: Condition, CardActionType, getConfigurations, setConfigurations, getSlaData, setSlaData, getToken, setToken, getBoardActions, getCardActions, getLists */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Condition\", function() { return Condition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CardActionType\", function() { return CardActionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getConfigurations\", function() { return getConfigurations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setConfigurations\", function() { return setConfigurations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSlaData\", function() { return getSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSlaData\", function() { return setSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getToken\", function() { return getToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setToken\", function() { return setToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBoardActions\", function() { return getBoardActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCardActions\", function() { return getCardActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLists\", function() { return getLists; });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst key = '652d72f229f65b3457533bd55fdcf436';\n// Right now we only provide being in a column as starting the SLA\nvar Condition;\n(function (Condition) {\n    Condition[\"ColumnName\"] = \"COLUMN_NAME\";\n})(Condition || (Condition = {}));\nvar CardActionType;\n(function (CardActionType) {\n    CardActionType[\"createCard\"] = \"createCard\";\n    CardActionType[\"updateCard\"] = \"updateCard\";\n})(CardActionType || (CardActionType = {}));\nconst getConfigurations = (t) => t.get('board', 'shared', 'config');\nconst setConfigurations = (t, config) => t.set('board', 'shared', 'config', config);\nconst getSlaData = (t) => t.get('card', 'shared', 'slaData');\nconst setSlaData = (t, slaData) => t.set('card', 'shared', 'slaData', slaData);\nconst getToken = (t) => t.get('member', 'private', 'authToken');\nconst setToken = (t, token) => t.set('member', 'private', 'authToken', token);\n/**\n * TODO: the problem with getting all board actions is that there is a limit of 1000\n * And that the actions for closed cards are also counted.\n */\nconst getBoardActions = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { board: boardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/boards/${boardId}/actions?limit=1000&filter=updateCard:idList,createCard&member=false&memberCreator=false&key=${key}&token=${token}`;\n    return axios.get(url)\n        .then(response => {\n        return response.data;\n    })\n        .catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\nconst getCardActions = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { card: cardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/cards/${cardId}/actions?filter=updateCard:idList,createCard&key=${key}&token=${token}`;\n    return axios.get(url).then(response => response.data).catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\n// TODO: don't need to call API for this when there is t.lists()\nconst getLists = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { board: boardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/boards/${boardId}/lists?cards=none&filter=open&key=${key}&token=${token}`;\n    return axios.get(url).then(response => response.data).catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHJlbGxvLXV0aWwudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3RyZWxsby11dGlsLnRzP2JhYjciXSwic291cmNlc0NvbnRlbnQiOlsiZGVjbGFyZSBjb25zdCBheGlvczogYW55O1xuXG5jb25zdCBrZXkgPSAnNjUyZDcyZjIyOWY2NWIzNDU3NTMzYmQ1NWZkY2Y0MzYnO1xuXG4vLyBSaWdodCBub3cgd2Ugb25seSBwcm92aWRlIGJlaW5nIGluIGEgY29sdW1uIGFzIHN0YXJ0aW5nIHRoZSBTTEFcbmV4cG9ydCBlbnVtIENvbmRpdGlvbiB7XG4gICAgQ29sdW1uTmFtZSA9IFwiQ09MVU1OX05BTUVcIixcbn1cblxuZXhwb3J0IGVudW0gQ2FyZEFjdGlvblR5cGUgeyBcbiAgICBjcmVhdGVDYXJkID0gXCJjcmVhdGVDYXJkXCIsXG4gICAgdXBkYXRlQ2FyZCA9IFwidXBkYXRlQ2FyZFwiXG59XG5cbmV4cG9ydCB0eXBlIFNsYUNvbmRpdGlvbiA9IHtcbiAgICB0eXBlOiBDb25kaXRpb247XG4gICAgaWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgU2xhQ29uZmlndXJhdGlvbiA9IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBzdGFydENvbmRpdGlvbjogU2xhQ29uZGl0aW9uO1xuICAgIGVuZENvbmRpdGlvbjogU2xhQ29uZGl0aW9uO1xuICAgIHRpbWU6IG51bWJlcjsgLy8gTWludXRlc1xufVxuXG5leHBvcnQgdHlwZSBTbGFEYXRhID0ge1xuICAgIHN0YXJ0VGltZT86IG51bWJlcjsgLy8gVW5peCB0aW1lc3RhbXAgbWlsbGlzZWNvbmRzLiBPbmx5IGV4aXN0cyBpZiBTTEEgaGFzIHN0YXJ0ZWRcbiAgICBlbmRUaW1lPzogbnVtYmVyOyAvLyBVbml4IHRpbWVzdGFtcCBpbiBtaWxsaXNlY29uZHMuIE9ubHkgZXhpc3RzIGlmIFNMQSBoYXMgZW5kZWRcbn1cblxuZXhwb3J0IHR5cGUgU2xhRGF0YU1hcCA9IHtcbiAgICBbaWQ6IG51bWJlcl06IFNsYURhdGE7XG59XG5cbmV4cG9ydCB0eXBlIENhcmRBY3Rpb24gPSBDcmVhdGVDYXJkQWN0aW9uIHwgVXBkYXRlQ2FyZEFjdGlvbjtcblxuZXhwb3J0IHR5cGUgVXBkYXRlQ2FyZEFjdGlvbiA9IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGRhdGE6IHtcbiAgICAgICAgbGlzdEFmdGVyOiB7aWQ6IHN0cmluZ307XG4gICAgICAgIGxpc3RCZWZvcmU6IHtpZDogc3RyaW5nfTtcbiAgICB9O1xuICAgIHR5cGU6IHR5cGVvZiBDYXJkQWN0aW9uVHlwZS51cGRhdGVDYXJkO1xuICAgIGRhdGU6IHN0cmluZzsgLy8gZm9ybWF0IDIwMTktMTEtMjlUMjE6MDU6MjguNTEwWlxufVxuXG5leHBvcnQgdHlwZSBDcmVhdGVDYXJkQWN0aW9uID0ge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgZGF0YToge1xuICAgICAgICBsaXN0OiB7aWQ6IHN0cmluZ307XG4gICAgfTtcbiAgICB0eXBlOiB0eXBlb2YgQ2FyZEFjdGlvblR5cGUuY3JlYXRlQ2FyZDtcbiAgICBkYXRlOiBzdHJpbmc7IC8vIGZvcm1hdCAyMDE5LTExLTI5VDIxOjA1OjI4LjUxMFpcbn1cblxudHlwZSBOYW1lQW5kSWQgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIExpc3QgPSBOYW1lQW5kSWQ7XG5cbmV4cG9ydCB0eXBlIEJvYXJkQWN0aW9uID0ge1xuICAgIGRhdGE6IHtcbiAgICAgICAgYm9hcmQ6IE5hbWVBbmRJZDtcbiAgICAgICAgY2FyZDogTmFtZUFuZElkO1xuICAgICAgICBsaXN0PzogTmFtZUFuZElkO1xuICAgICAgICBsaXN0QmVmb3JlPzogTmFtZUFuZElkO1xuICAgICAgICBsaXN0QWZ0ZXI/OiBOYW1lQW5kSWQ7XG4gICAgfTtcbiAgICBkYXRlOiBzdHJpbmc7XG4gICAgdHlwZTogQ2FyZEFjdGlvblR5cGU7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRDb25maWd1cmF0aW9ucyA9ICh0KTogUHJvbWlzZTxTbGFDb25maWd1cmF0aW9uW10gfCB2b2lkPiA9PiB0LmdldCgnYm9hcmQnLCAnc2hhcmVkJywgJ2NvbmZpZycpO1xuZXhwb3J0IGNvbnN0IHNldENvbmZpZ3VyYXRpb25zID0gKHQsIGNvbmZpZzogU2xhQ29uZmlndXJhdGlvbltdKTogdm9pZCA9PiB0LnNldCgnYm9hcmQnLCAnc2hhcmVkJywgJ2NvbmZpZycsIGNvbmZpZyk7XG5leHBvcnQgY29uc3QgZ2V0U2xhRGF0YSA9ICh0KTogUHJvbWlzZTxTbGFEYXRhTWFwIHwgdm9pZD4gPT4gdC5nZXQoJ2NhcmQnLCAnc2hhcmVkJywgJ3NsYURhdGEnKTtcbmV4cG9ydCBjb25zdCBzZXRTbGFEYXRhID0gKHQsIHNsYURhdGE6IFNsYURhdGFNYXApOiB2b2lkID0+IHQuc2V0KCdjYXJkJywgJ3NoYXJlZCcsICdzbGFEYXRhJywgc2xhRGF0YSk7XG5leHBvcnQgY29uc3QgZ2V0VG9rZW4gPSAodCk6IFByb21pc2U8c3RyaW5nIHwgdm9pZD4gPT4gdC5nZXQoJ21lbWJlcicsICdwcml2YXRlJywgJ2F1dGhUb2tlbicpO1xuZXhwb3J0IGNvbnN0IHNldFRva2VuID0gKHQsIHRva2VuKTogUHJvbWlzZTx2b2lkPiA9PiB0LnNldCgnbWVtYmVyJywgJ3ByaXZhdGUnLCAnYXV0aFRva2VuJywgdG9rZW4pO1xuXG4vKipcbiAqIFRPRE86IHRoZSBwcm9ibGVtIHdpdGggZ2V0dGluZyBhbGwgYm9hcmQgYWN0aW9ucyBpcyB0aGF0IHRoZXJlIGlzIGEgbGltaXQgb2YgMTAwMFxuICogQW5kIHRoYXQgdGhlIGFjdGlvbnMgZm9yIGNsb3NlZCBjYXJkcyBhcmUgYWxzbyBjb3VudGVkLlxuICovIFxuZXhwb3J0IGNvbnN0IGdldEJvYXJkQWN0aW9ucyA9IGFzeW5jICh0KTogUHJvbWlzZTxCb2FyZEFjdGlvbltdPiA9PiB7XG4gICAgY29uc3QgeyBib2FyZDogYm9hcmRJZCB9ID0gdC5nZXRDb250ZXh0KCk7XG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZXRUb2tlbih0KTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkudHJlbGxvLmNvbS8xL2JvYXJkcy8ke2JvYXJkSWR9L2FjdGlvbnM/bGltaXQ9MTAwMCZmaWx0ZXI9dXBkYXRlQ2FyZDppZExpc3QsY3JlYXRlQ2FyZCZtZW1iZXI9ZmFsc2UmbWVtYmVyQ3JlYXRvcj1mYWxzZSZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybClcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUgJiYgZS5yZXNwb25zZSAmJiBlLnJlc3BvbnNlLnN0YXR1cyAmJiBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgICAgICAgc2V0VG9rZW4odCwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Q2FyZEFjdGlvbnMgPSBhc3luYyAodCk6IFByb21pc2U8Q2FyZEFjdGlvbltdPiA9PiB7XG4gICAgY29uc3QgeyBjYXJkOiBjYXJkSWQgfSA9IHQuZ2V0Q29udGV4dCgpO1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgZ2V0VG9rZW4odCk7XG4gICAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLnRyZWxsby5jb20vMS9jYXJkcy8ke2NhcmRJZH0vYWN0aW9ucz9maWx0ZXI9dXBkYXRlQ2FyZDppZExpc3QsY3JlYXRlQ2FyZCZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAoZSAmJiBlLnJlc3BvbnNlICYmIGUucmVzcG9uc2Uuc3RhdHVzICYmIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHNldFRva2VuKHQsIHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbi8vIFRPRE86IGRvbid0IG5lZWQgdG8gY2FsbCBBUEkgZm9yIHRoaXMgd2hlbiB0aGVyZSBpcyB0Lmxpc3RzKClcbmV4cG9ydCBjb25zdCBnZXRMaXN0cyA9IGFzeW5jICh0KTogUHJvbWlzZTxMaXN0W10+ID0+IHtcbiAgICBjb25zdCB7IGJvYXJkOiBib2FyZElkIH0gPSB0LmdldENvbnRleHQoKTtcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdldFRva2VuKHQpO1xuICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS50cmVsbG8uY29tLzEvYm9hcmRzLyR7Ym9hcmRJZH0vbGlzdHM/Y2FyZHM9bm9uZSZmaWx0ZXI9b3BlbiZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAoZSAmJiBlLnJlc3BvbnNlICYmIGUucmVzcG9uc2Uuc3RhdHVzICYmIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHNldFRva2VuKHQsIHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFnRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/trello-util.ts\n");

/***/ }),

/***/ "./src/util.ts":
/*!*********************!*\
  !*** ./src/util.ts ***!
  \*********************/
/*! exports provided: truncate, getHumanReadableTime, getMinutesRemaining, getColor, getRunningSlas, getEndTime, getStartTime, getUpdatedSlaData, updateConfigs, getActionsPerCard, updateAllConfigs, generateUuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"truncate\", function() { return truncate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHumanReadableTime\", function() { return getHumanReadableTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMinutesRemaining\", function() { return getMinutesRemaining; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColor\", function() { return getColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRunningSlas\", function() { return getRunningSlas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEndTime\", function() { return getEndTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStartTime\", function() { return getStartTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUpdatedSlaData\", function() { return getUpdatedSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateConfigs\", function() { return updateConfigs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getActionsPerCard\", function() { return getActionsPerCard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateAllConfigs\", function() { return updateAllConfigs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateUuid\", function() { return generateUuid; });\n/* harmony import */ var _trello_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trello-util */ \"./src/trello-util.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst truncate = (str, n, shouldEllipse) => (str.length > n) ? str.substr(0, n - 1) + `${shouldEllipse ? '&hellip;' : ''}` : str;\nconst getHumanReadableTime = (realMinutes) => {\n    const isNegative = realMinutes < 0;\n    const minutes = isNegative ? realMinutes * -1 : realMinutes;\n    const negativeSign = isNegative ? '-' : '';\n    const MINUTES = 'min';\n    const HOURS = 'h';\n    const DAYS = 'd';\n    if (minutes < 60) {\n        return `${negativeSign}${minutes}${MINUTES}`;\n    }\n    if (minutes < 1440) {\n        const hours = Math.floor(minutes / 60);\n        const hoursString = hours > 0 ? `${hours}${HOURS}` : '';\n        const remainingMinutes = minutes - 60 * hours;\n        const minutesString = remainingMinutes > 0 ? `${remainingMinutes}${MINUTES}` : '';\n        const spacer = hoursString && minutesString ? ' ' : '';\n        return `${negativeSign}${hoursString}${spacer}${minutesString}`;\n    }\n    const days = Math.floor(minutes / 1440);\n    const daysString = days > 0 ? `${days}${DAYS}` : '';\n    const remainingMinutes = minutes - days * 1440;\n    const remainingHours = Math.floor(remainingMinutes / 60);\n    const hoursString = remainingHours > 0 ? `${remainingHours}${HOURS}` : '';\n    const spacer = daysString && hoursString ? ' ' : '';\n    return `${negativeSign}${daysString}${spacer}${hoursString}`;\n};\nconst getMinutesRemaining = (startTime, endTime, config) => {\n    const minutesElapsed = Math.floor((endTime - startTime) / 1000 / 60);\n    const minutesRemaining = config.time - minutesElapsed;\n    return minutesRemaining;\n};\nconst getColor = (minutesRemaining, isComplete) => {\n    if (isComplete) {\n        return 'grey';\n    }\n    ;\n    if (minutesRemaining < 0) {\n        return 'red';\n    }\n    else if (minutesRemaining < 60) {\n        return 'yellow';\n    }\n    return 'green';\n};\nconst getRunningSlas = (data, configs, detailed) => {\n    const runningSlas = [];\n    const completeSlas = [];\n    configs.forEach((config) => {\n        if (data[config.id]) {\n            const { startTime, endTime } = data[config.id];\n            if (startTime && !endTime) {\n                runningSlas.push({\n                    dynamic: function () {\n                        const unix = moment().valueOf();\n                        const minutesRemaining = getMinutesRemaining(startTime, unix, config);\n                        const humanReadable = getHumanReadableTime(minutesRemaining);\n                        return Object.assign(Object.assign(Object.assign({ text: humanReadable, color: getColor(minutesRemaining, false) }, (detailed ? { title: `${config.name} - Ongoing` } : {})), (!detailed ? { icon: `${window.location}img/stopwatch.svg` } : {})), { refresh: 60 });\n                    }\n                });\n            }\n            if (startTime && endTime && detailed) {\n                const minutesRemaining = getMinutesRemaining(startTime, endTime, config);\n                const humanReadable = getHumanReadableTime(minutesRemaining);\n                completeSlas.push({\n                    text: humanReadable,\n                    color: getColor(minutesRemaining, true),\n                    title: `${config.name} - stopped`,\n                });\n            }\n        }\n    });\n    // We want the complete SLAs to come after the running ones\n    const allSlas = runningSlas.concat(completeSlas);\n    return allSlas;\n};\nconst getEndTime = (actions, endCondition, startTime) => {\n    let endTime = undefined;\n    actions.forEach((action) => {\n        if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].updateCard) {\n            if (action.data.listAfter.id === endCondition.id &&\n                (!endTime || moment(action.date).valueOf() < endTime) &&\n                moment(action.date).valueOf() > startTime) {\n                endTime = moment(action.date).valueOf();\n            }\n        }\n    });\n    return endTime;\n};\nconst getStartTime = (actions, startCondition) => {\n    let startTime = undefined;\n    actions.forEach((action) => {\n        if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].createCard && action.data.list.id === startCondition.id) {\n            startTime = moment(action.date).valueOf();\n        }\n        else if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].updateCard &&\n            action.data.listAfter.id === startCondition.id &&\n            !startTime || (moment(action.date).valueOf() < startTime)) {\n            startTime = moment(action.date).valueOf();\n        }\n    });\n    return startTime;\n};\nconst getUpdatedSlaData = (actions, configs, slaMap) => {\n    const updatedSlaMap = slaMap;\n    let hasChanged = false;\n    configs.forEach(config => {\n        const { id, startCondition, endCondition } = config;\n        if (!updatedSlaMap[id]) {\n            updatedSlaMap[id] = {};\n        }\n        const { startTime = undefined, endTime = undefined } = updatedSlaMap[id];\n        // We always recalculate start times and end times, in case the config has been edited.\n        const newStartTime = getStartTime(actions, startCondition);\n        const startTimeHasChanged = newStartTime !== startTime;\n        const newEndTime = startTime || newStartTime ? getEndTime(actions, endCondition, startTime || newStartTime) : undefined;\n        const endTimeHasChanged = newEndTime !== endTime;\n        if (startTimeHasChanged) {\n            hasChanged = true;\n            updatedSlaMap[id].startTime = newStartTime;\n        }\n        if (endTimeHasChanged) {\n            hasChanged = true;\n            updatedSlaMap[id].endTime = newEndTime;\n        }\n    });\n    return hasChanged ? updatedSlaMap : undefined;\n};\n// Find and remove any data from configs that have been since-deleted\nconst getSlaDataWithRemovals = (configs, slaMap) => {\n    const keys = Object.keys(slaMap);\n    if (keys.length === 0) {\n        return undefined;\n    }\n    const configIds = configs.map(config => config.id);\n    let removed = undefined;\n    keys.forEach(key => {\n        if (configIds.indexOf(key) === -1) {\n            removed = true;\n            delete slaMap[key];\n        }\n    });\n    return removed ? slaMap : undefined;\n};\nconst updateConfigs = (t, configs, slaMap, actions) => {\n    const updatedSlaData = getUpdatedSlaData(actions, configs, slaMap);\n    if (updatedSlaData) {\n        const slaDataWithRemovals = getSlaDataWithRemovals(configs, updatedSlaData);\n        const result = slaDataWithRemovals ? slaDataWithRemovals : updatedSlaData;\n        Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setSlaData\"])(t, result);\n    }\n    else {\n        const slaDataWithRemovals = getSlaDataWithRemovals(configs, slaMap);\n        if (slaDataWithRemovals) {\n            Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setSlaData\"])(t, slaDataWithRemovals);\n        }\n    }\n};\nconst getActionsPerCard = (actions) => {\n    const map = {};\n    actions.forEach(action => {\n        if (map[action.data.card.id] === undefined) {\n            map[action.data.card.id] = [];\n        }\n        map[action.data.card.id].push(action);\n    });\n    return map;\n};\nconst updateAllConfigs = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const token = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getToken\"])(t);\n    if (!token) {\n        return [];\n    }\n    const configs = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t);\n    if (!configs) {\n        return [];\n    }\n    const actions = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getBoardActions\"])(t);\n    const actionsPerCard = getActionsPerCard(actions);\n    const cardIds = Object.keys(actionsPerCard);\n    const slaMap = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getSlaData\"])(t);\n    cardIds.forEach(cardId => {\n        const cardActions = actionsPerCard[cardId];\n        updateConfigs(t, configs, slaMap || {}, cardActions);\n    });\n});\n// https://gist.github.com/jed/982883\nconst generateUuid = function () { return (\"\" + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/1|0/g, function () { return (0 | Math.random() * 16).toString(16); }); };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/util.ts\n");

/***/ })

/******/ });