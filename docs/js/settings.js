/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/settings.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/settings.ts":
/*!*************************!*\
  !*** ./src/settings.ts ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _trello_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trello-util */ \"./src/trello-util.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"./src/util.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst t = TrelloPowerUp.iframe();\n\n\nlet lists = [];\nconst START_SELECT = '.start-select';\nconst END_SELECT = '.end-select';\nconst HOURS_INPUT = '.hours-input';\nconst MINUTES_INPUT = '.minutes-input';\nconst NAME_INPUT = '.name-input';\nconst MEATBALLS_BTN = '#meatballs-btn';\nconst stringToNode = (domString) => {\n    const wrapper = document.createElement('div');\n    wrapper.innerHTML = domString;\n    return wrapper.firstChild;\n};\nconst columnIdToName = (id) => {\n    const list = lists.find(list => list.id === id);\n    return list ? list.name : 'List no longer exists';\n};\nconst createOptions = (currentValue, filteredValue) => {\n    const options = [];\n    lists.forEach(list => {\n        if (list.id !== filteredValue) {\n            const option = document.createElement('option');\n            option.setAttribute('value', list.id);\n            option.appendChild(document.createTextNode(list.name));\n            if (list.id === currentValue) {\n                option.selected = true;\n            }\n            options.push(option);\n        }\n    });\n    return options;\n};\nconst createOptionsForNewRow = (isStart) => isStart ? createOptions(lists[0].id, lists[1].id) : createOptions(lists[1].id, lists[0].id);\nconst getConfigString = (config, withRowDiv = true) => `${withRowDiv ? '<div class=\"row clickable\">' : ''}\n      <div class=\"col0\">${Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"truncate\"])(config.name, 40, true)}</div>\n      <div class=\"col1\">\n        <span class=\"condition-type\">Start when card is in list</span>\n        <br>${Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"truncate\"])(columnIdToName(config.startCondition.id), 20, true)}\n        <br><span class=\"condition-type\">Ends when card is in list</span>\n        <br>${columnIdToName(config.endCondition.id)}\n      </div>\n      <div class=\"col2\">Duration: ${Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"getHumanReadableTime\"])(config.time)}</div>\n      <div class=\"col3\">\n        <button id=\"meatballs-btn\" class=\"mod-bottom\"></button>\n      </div>\n  ${withRowDiv ? '</div>' : ''}`;\nconst renderConfig = (config, withRowDiv = true) => stringToNode(getConfigString(config, withRowDiv));\nconst getConfigEditMode = (config) => {\n    const domString = `\n    <div class=\"col0\">\n      <input class=\"name-input\" value=${config ? `\"${config.name}\"` : \"SLA Name\"}></input>\n    </div>\n    <div class=\"col1\">\n      <span class=\"condition-type\">Start when card is in list</span>\n      <br><select class=\"start-select\"></select>\n      <br><span class=\"condition-type\">End when card is in list</span>\n      <br><select class=\"end-select\"></select>\n    </div>\n    <div class=\"col2\">\n      <input class=\"hours-input\" type=\"number\" min=\"0\" max=\"10000\" oninput=\"validity.valid||(value='')\" value=\"${config ? Math.floor(config.time / 60) : 1}\"></input><span>h</span>\n      <input class=\"minutes-input\" type=\"number\" min=\"0\" max=\"10000\" oninput=\"validity.valid||(value='')\" value=\"${config ? config.time - Math.floor(config.time / 60) * 60 : 30}\"></input><span>min</span>\n    </div>\n    <div class=\"col3\">\n        <button id=\"save-btn\" class=\"mod-primary mod-bottom\">Save</button>\n        <button id=\"cancel-btn\" class=\"mod-bottom\">Cancel</button>\n    </div>`;\n    return domString;\n};\nconst getAddRowString = (withRowDiv = true) => `${withRowDiv ? '<div class=\"row clickable\">' : ''}\n  <div class=\"add-row\">\n  Add SLA\n  </div>\n  ${withRowDiv ? '</div>' : ''}`;\nconst renderAddRow = (withRowDiv = true) => stringToNode(getAddRowString(withRowDiv));\nconst renderNotEnoughListsMessage = () => stringToNode(`<div class=\"center\"><p>This Power-Up requires you to have at least two lists! </p></div>`);\nfunction onSave(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const rowDiv = this.parentElement.parentElement;\n        const index = [...rowDiv.parentElement.children].indexOf(rowDiv);\n        const start = rowDiv.querySelector(START_SELECT).selectedOptions[0].value;\n        const end = rowDiv.querySelector(END_SELECT).selectedOptions[0].value;\n        const hours = rowDiv.querySelector(HOURS_INPUT).value || 0;\n        const minutes = rowDiv.querySelector(MINUTES_INPUT).value || 0;\n        const name = rowDiv.querySelector(NAME_INPUT).value || '';\n        const time = parseInt(hours, 10) * 60 + parseInt(minutes, 10);\n        const configs = (yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t)) || [];\n        let newRow = false;\n        if (index > configs.length - 1) {\n            newRow = true;\n        }\n        if (newRow) {\n            const row = {\n                id: Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"generateUuid\"])(),\n                startCondition: {\n                    type: _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"Condition\"].ColumnName,\n                    id: start\n                },\n                endCondition: {\n                    type: _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"Condition\"].ColumnName,\n                    id: end,\n                },\n                time,\n                name,\n            };\n            configs.push(row);\n        }\n        else {\n            configs[index].startCondition.id = start;\n            configs[index].endCondition.id = end;\n            configs[index].time = time;\n            configs[index].name = Object(_util__WEBPACK_IMPORTED_MODULE_1__[\"truncate\"])(name, 50, false);\n        }\n        yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setConfigurations\"])(t, configs);\n    });\n}\nfunction showMeatballsMenu(event) {\n    return __awaiter(this, void 0, void 0, function* () {\n        event.stopImmediatePropagation();\n        const rowDiv = this.parentElement.parentElement;\n        const index = [...rowDiv.parentElement.children].indexOf(rowDiv);\n        const configs = (yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t)) || [];\n        // Gets the current config, and removes it from the configs list\n        const currentConfig = configs.splice(index, 1);\n        const report = {\n            text: 'Generate report (.csv)',\n            callback: function () {\n                return __awaiter(this, void 0, void 0, function* () {\n                    t.popup({\n                        title: 'Generating report',\n                        url: './report.html',\n                        args: { currentConfig: currentConfig[0] },\n                        height: 50,\n                        mouseEvent: event,\n                    });\n                });\n            },\n        };\n        const deleteSla = {\n            text: 'Delete SLA',\n            callback: function (t2) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setConfigurations\"])(t, configs);\n                    t2.closePopup();\n                });\n            },\n        };\n        t.popup({\n            title: 'Options',\n            mouseEvent: event,\n            items: [report, deleteSla],\n        });\n    });\n}\nfunction onSelectOptionChange(isStart) {\n    return function fn() {\n        const rowDiv = this.parentElement.parentElement;\n        const select = isStart ? rowDiv.querySelector(END_SELECT) : rowDiv.querySelector(START_SELECT);\n        const options = createOptions(select.selectedOptions[0].value, this.selectedOptions[0].value);\n        select.innerHTML = undefined;\n        options.forEach(option => {\n            select.appendChild(option);\n        });\n    };\n}\nfunction onCancel() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const rowDiv = this.parentElement.parentElement;\n        const index = [...rowDiv.parentElement.children].indexOf(rowDiv);\n        const configs = (yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t)) || [];\n        rowDiv.classList.remove('editing');\n        if (index > configs.length - 1) {\n            rowDiv.innerHTML = getAddRowString(false);\n        }\n        else {\n            rowDiv.innerHTML = getConfigString(configs[index], false);\n        }\n        // Unfreeze all rows and meatballs menus\n        const allRows = rowDiv.parentElement.children;\n        [].forEach.call(allRows, function (row) {\n            row.classList.add('clickable');\n        });\n        const allMeatballsBtns = document.querySelectorAll(MEATBALLS_BTN);\n        [].forEach.call(allMeatballsBtns, function (btn) {\n            btn.disabled = false;\n            btn.onclick = showMeatballsMenu;\n        });\n    });\n}\nfunction onRowClick() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!this.classList.contains('clickable')) {\n            return;\n        }\n        // Freeze all other rows and delete btns\n        this.classList.add('editing');\n        const allRows = this.parentElement.children;\n        [].forEach.call(allRows, function (row) {\n            row.classList.remove('clickable');\n        });\n        const meatballsBtns = document.querySelectorAll(MEATBALLS_BTN);\n        [].forEach.call(meatballsBtns, function (btn) {\n            btn.disabled = true;\n        });\n        const index = [...this.parentElement.children].indexOf(this);\n        const configs = (yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t)) || [];\n        let newRow = false;\n        if (index > configs.length - 1) {\n            newRow = true;\n        }\n        const config = newRow ? undefined : configs[index];\n        this.innerHTML = getConfigEditMode(config);\n        const startOptions = newRow ? createOptionsForNewRow(true) : createOptions(config.startCondition.id, config.endCondition.id);\n        const endOptions = newRow ? createOptionsForNewRow(false) : createOptions(config.endCondition.id, config.startCondition.id);\n        const startSelect = this.querySelector(START_SELECT);\n        const endSelect = this.querySelector(END_SELECT);\n        // If change option, need to make sure that the option is not present in the other select\n        startSelect.addEventListener(\"change\", onSelectOptionChange(true));\n        endSelect.addEventListener(\"change\", onSelectOptionChange(false));\n        this.querySelector('#save-btn').onclick = onSave;\n        this.querySelector('#cancel-btn').onclick = onCancel;\n        startOptions.forEach(option => {\n            startSelect.appendChild(option);\n        });\n        endOptions.forEach(option => {\n            endSelect.appendChild(option);\n        });\n    });\n}\nfunction onAuthenticate() {\n    return Trello.authorize({\n        type: \"popup\",\n        name: \"SLAs for Trello\",\n        expiration: \"never\",\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        return_url: \"https://emgoto.github.io/trello-sla/\",\n        success: () => {\n            Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setToken\"])(t, Trello.token());\n        },\n        error: () => { },\n    });\n}\n;\nconst renderAuthenticateButton = () => stringToNode(`<div class=\"center\"><p>To view and configure SLAs, you will need to first authenticate with SLAs for Trello.</p><button id=\"authenticate-btn\" class=\"mod-bottom\">Authenticate</button><p></p></div>`);\nt.render(function () {\n    return __awaiter(this, void 0, void 0, function* () {\n        const container = document.getElementById('container');\n        container.innerHTML = '';\n        const token = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getToken\"])(t);\n        if (!token) {\n            container.appendChild(renderAuthenticateButton());\n            document.getElementById('authenticate-btn').onclick = onAuthenticate;\n            t.sizeTo(document.getElementById('wrapper'));\n            return;\n        }\n        lists = yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getLists\"])(t);\n        if (lists.length < 2) {\n            container.appendChild(renderNotEnoughListsMessage());\n            t.sizeTo(document.getElementById('wrapper'));\n            return;\n        }\n        const configs = (yield Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getConfigurations\"])(t)) || [];\n        configs.forEach((config) => {\n            container.appendChild(renderConfig(config));\n        });\n        container.appendChild(renderAddRow());\n        const rows = document.querySelectorAll('.row');\n        Array.from(rows).forEach(row => row.onclick = onRowClick);\n        const meatballsBtns = document.querySelectorAll(MEATBALLS_BTN);\n        Array.from(meatballsBtns).forEach(btn => btn.onclick = showMeatballsMenu);\n        t.sizeTo(document.getElementById('wrapper'));\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/settings.ts\n");

/***/ }),

/***/ "./src/trello-util.ts":
/*!****************************!*\
  !*** ./src/trello-util.ts ***!
  \****************************/
/*! exports provided: Condition, CardActionType, getConfigurations, setConfigurations, getSlaData, setSlaData, getToken, setToken, getBoardActions, getCardActions, getLists */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Condition\", function() { return Condition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CardActionType\", function() { return CardActionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getConfigurations\", function() { return getConfigurations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setConfigurations\", function() { return setConfigurations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSlaData\", function() { return getSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSlaData\", function() { return setSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getToken\", function() { return getToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setToken\", function() { return setToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBoardActions\", function() { return getBoardActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCardActions\", function() { return getCardActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLists\", function() { return getLists; });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst key = '652d72f229f65b3457533bd55fdcf436';\n// Right now we only provide being in a column as starting the SLA\nvar Condition;\n(function (Condition) {\n    Condition[\"ColumnName\"] = \"COLUMN_NAME\";\n})(Condition || (Condition = {}));\nvar CardActionType;\n(function (CardActionType) {\n    CardActionType[\"createCard\"] = \"createCard\";\n    CardActionType[\"emailCard\"] = \"emailCard\";\n    CardActionType[\"copyCard\"] = \"copyCard\";\n    CardActionType[\"updateCard\"] = \"updateCard\";\n})(CardActionType || (CardActionType = {}));\nconst getConfigurations = (t) => t.get('board', 'shared', 'config');\nconst setConfigurations = (t, config) => t.set('board', 'shared', 'config', config);\nconst getSlaData = (t) => t.get('card', 'shared', 'slaData');\nconst setSlaData = (t, slaData) => t.set('card', 'shared', 'slaData', slaData);\nconst getToken = (t) => t.get('member', 'private', 'authToken');\nconst setToken = (t, token) => t.set('member', 'private', 'authToken', token);\n/**\n * TODO: the problem with getting all board actions is that there is a limit of 1000\n * And that the actions for closed cards are also counted.\n */\nconst getBoardActions = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { board: boardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/boards/${boardId}/actions?limit=1000&filter=updateCard:idList,createCard&member=false&memberCreator=false&key=${key}&token=${token}`;\n    return axios.get(url)\n        .then(response => {\n        return response.data;\n    })\n        .catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\nconst getCardActions = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { card: cardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/cards/${cardId}/actions?filter=updateCard:idList,createCard,copyCard,emailCard&key=${key}&token=${token}`;\n    return axios.get(url).then(response => response.data).catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\nconst getLists = (t) => __awaiter(void 0, void 0, void 0, function* () {\n    const { board: boardId } = t.getContext();\n    const token = yield getToken(t);\n    const url = `https://api.trello.com/1/boards/${boardId}/lists?cards=none&filter=open&key=${key}&token=${token}`;\n    return axios.get(url).then(response => response.data).catch((e) => {\n        if (e && e.response && e.response.status && e.response.status === 401) {\n            setToken(t, undefined);\n        }\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHJlbGxvLXV0aWwudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3RyZWxsby11dGlsLnRzP2JhYjciXSwic291cmNlc0NvbnRlbnQiOlsiZGVjbGFyZSBjb25zdCBheGlvczogYW55O1xuXG5jb25zdCBrZXkgPSAnNjUyZDcyZjIyOWY2NWIzNDU3NTMzYmQ1NWZkY2Y0MzYnO1xuXG4vLyBSaWdodCBub3cgd2Ugb25seSBwcm92aWRlIGJlaW5nIGluIGEgY29sdW1uIGFzIHN0YXJ0aW5nIHRoZSBTTEFcbmV4cG9ydCBlbnVtIENvbmRpdGlvbiB7XG4gICAgQ29sdW1uTmFtZSA9IFwiQ09MVU1OX05BTUVcIixcbn1cblxuZXhwb3J0IGVudW0gQ2FyZEFjdGlvblR5cGUgeyBcbiAgICBjcmVhdGVDYXJkID0gXCJjcmVhdGVDYXJkXCIsXG4gICAgZW1haWxDYXJkID0gXCJlbWFpbENhcmRcIixcbiAgICBjb3B5Q2FyZCA9IFwiY29weUNhcmRcIixcbiAgICB1cGRhdGVDYXJkID0gXCJ1cGRhdGVDYXJkXCJcbn1cblxuZXhwb3J0IHR5cGUgU2xhQ29uZGl0aW9uID0ge1xuICAgIHR5cGU6IENvbmRpdGlvbjtcbiAgICBpZDogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBTbGFDb25maWd1cmF0aW9uID0ge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHN0YXJ0Q29uZGl0aW9uOiBTbGFDb25kaXRpb247XG4gICAgZW5kQ29uZGl0aW9uOiBTbGFDb25kaXRpb247XG4gICAgdGltZTogbnVtYmVyOyAvLyBNaW51dGVzXG59XG5cbmV4cG9ydCB0eXBlIFNsYURhdGEgPSB7XG4gICAgc3RhcnRUaW1lPzogbnVtYmVyOyAvLyBVbml4IHRpbWVzdGFtcCBtaWxsaXNlY29uZHMuIE9ubHkgZXhpc3RzIGlmIFNMQSBoYXMgc3RhcnRlZFxuICAgIGVuZFRpbWU/OiBudW1iZXI7IC8vIFVuaXggdGltZXN0YW1wIGluIG1pbGxpc2Vjb25kcy4gT25seSBleGlzdHMgaWYgU0xBIGhhcyBlbmRlZFxufVxuXG5leHBvcnQgdHlwZSBTbGFEYXRhTWFwID0ge1xuICAgIFtpZDogbnVtYmVyXTogU2xhRGF0YTtcbn1cblxuZXhwb3J0IHR5cGUgQ2FyZEFjdGlvbiA9IENyZWF0ZUNhcmRBY3Rpb24gfCBVcGRhdGVDYXJkQWN0aW9uIHwgQ29weUNhcmRBY3Rpb24gfCBFbWFpbENhcmRBY3Rpb247XG5cbmV4cG9ydCB0eXBlIFVwZGF0ZUNhcmRBY3Rpb24gPSB7XG4gICAgZGF0YToge1xuICAgICAgICBsaXN0QWZ0ZXI6IHtpZDogc3RyaW5nfTtcbiAgICAgICAgbGlzdEJlZm9yZToge2lkOiBzdHJpbmd9O1xuICAgICAgICBjYXJkOiBOYW1lQW5kSWQ7XG4gICAgfTtcbiAgICB0eXBlOiB0eXBlb2YgQ2FyZEFjdGlvblR5cGUudXBkYXRlQ2FyZDtcbiAgICBkYXRlOiBzdHJpbmc7IC8vIGZvcm1hdCAyMDE5LTExLTI5VDIxOjA1OjI4LjUxMFpcbn1cblxuZXhwb3J0IHR5cGUgQ3JlYXRlQ2FyZEFjdGlvbiA9IHtcbiAgICBkYXRhOiB7XG4gICAgICAgIGxpc3Q6IHtpZDogc3RyaW5nfTtcbiAgICAgICAgY2FyZDogTmFtZUFuZElkO1xuICAgIH07XG4gICAgdHlwZTogdHlwZW9mIENhcmRBY3Rpb25UeXBlLmNyZWF0ZUNhcmQ7XG4gICAgZGF0ZTogc3RyaW5nOyAvLyBmb3JtYXQgMjAxOS0xMS0yOVQyMTowNToyOC41MTBaXG59XG5cbmV4cG9ydCB0eXBlIENvcHlDYXJkQWN0aW9uID0ge1xuICAgIGRhdGE6IHtcbiAgICAgICAgbGlzdDoge2lkOiBzdHJpbmd9O1xuICAgICAgICBjYXJkOiBOYW1lQW5kSWQ7XG4gICAgfTtcbiAgICB0eXBlOiB0eXBlb2YgQ2FyZEFjdGlvblR5cGUuY29weUNhcmQ7XG4gICAgZGF0ZTogc3RyaW5nOyAvLyBmb3JtYXQgMjAxOS0xMS0yOVQyMTowNToyOC41MTBaXG59O1xuXG5cbi8vIFRPRE86IEkgZG9uJ3QgYWN0dWFsbHkga25vdyB0aGUgZGF0YXNoYXBlIG9mIGVtYWlsIGFjdGlvbnMsIGJ1dCB3b3VsZCBhc3N1bWUgaXQgaXMgdGhpc1xuZXhwb3J0IHR5cGUgRW1haWxDYXJkQWN0aW9uID0ge1xuICAgIGRhdGE6IHtcbiAgICAgICAgbGlzdDoge2lkOiBzdHJpbmd9O1xuICAgICAgICBjYXJkOiBOYW1lQW5kSWQ7XG4gICAgfTtcbiAgICB0eXBlOiB0eXBlb2YgQ2FyZEFjdGlvblR5cGUuZW1haWxDYXJkO1xuICAgIGRhdGU6IHN0cmluZzsgLy8gZm9ybWF0IDIwMTktMTEtMjlUMjE6MDU6MjguNTEwWlxufTtcblxudHlwZSBOYW1lQW5kSWQgPSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIExpc3QgPSBOYW1lQW5kSWQ7XG5cbmV4cG9ydCB0eXBlIEJvYXJkQWN0aW9uID0ge1xuICAgIGRhdGE6IHtcbiAgICAgICAgYm9hcmQ6IE5hbWVBbmRJZDtcbiAgICAgICAgY2FyZDogTmFtZUFuZElkO1xuICAgICAgICBsaXN0PzogTmFtZUFuZElkO1xuICAgICAgICBsaXN0QmVmb3JlPzogTmFtZUFuZElkO1xuICAgICAgICBsaXN0QWZ0ZXI/OiBOYW1lQW5kSWQ7XG4gICAgfTtcbiAgICBkYXRlOiBzdHJpbmc7XG4gICAgdHlwZTogQ2FyZEFjdGlvblR5cGU7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRDb25maWd1cmF0aW9ucyA9ICh0KTogUHJvbWlzZTxTbGFDb25maWd1cmF0aW9uW10gfCB2b2lkPiA9PiB0LmdldCgnYm9hcmQnLCAnc2hhcmVkJywgJ2NvbmZpZycpO1xuZXhwb3J0IGNvbnN0IHNldENvbmZpZ3VyYXRpb25zID0gKHQsIGNvbmZpZzogU2xhQ29uZmlndXJhdGlvbltdKTogdm9pZCA9PiB0LnNldCgnYm9hcmQnLCAnc2hhcmVkJywgJ2NvbmZpZycsIGNvbmZpZyk7XG5leHBvcnQgY29uc3QgZ2V0U2xhRGF0YSA9ICh0KTogUHJvbWlzZTxTbGFEYXRhTWFwIHwgdm9pZD4gPT4gdC5nZXQoJ2NhcmQnLCAnc2hhcmVkJywgJ3NsYURhdGEnKTtcbmV4cG9ydCBjb25zdCBzZXRTbGFEYXRhID0gKHQsIHNsYURhdGE6IFNsYURhdGFNYXApOiB2b2lkID0+IHQuc2V0KCdjYXJkJywgJ3NoYXJlZCcsICdzbGFEYXRhJywgc2xhRGF0YSk7XG5leHBvcnQgY29uc3QgZ2V0VG9rZW4gPSAodCk6IFByb21pc2U8c3RyaW5nIHwgdm9pZD4gPT4gdC5nZXQoJ21lbWJlcicsICdwcml2YXRlJywgJ2F1dGhUb2tlbicpO1xuZXhwb3J0IGNvbnN0IHNldFRva2VuID0gKHQsIHRva2VuKTogUHJvbWlzZTx2b2lkPiA9PiB0LnNldCgnbWVtYmVyJywgJ3ByaXZhdGUnLCAnYXV0aFRva2VuJywgdG9rZW4pO1xuXG4vKipcbiAqIFRPRE86IHRoZSBwcm9ibGVtIHdpdGggZ2V0dGluZyBhbGwgYm9hcmQgYWN0aW9ucyBpcyB0aGF0IHRoZXJlIGlzIGEgbGltaXQgb2YgMTAwMFxuICogQW5kIHRoYXQgdGhlIGFjdGlvbnMgZm9yIGNsb3NlZCBjYXJkcyBhcmUgYWxzbyBjb3VudGVkLlxuICovIFxuZXhwb3J0IGNvbnN0IGdldEJvYXJkQWN0aW9ucyA9IGFzeW5jICh0KTogUHJvbWlzZTxCb2FyZEFjdGlvbltdPiA9PiB7XG4gICAgY29uc3QgeyBib2FyZDogYm9hcmRJZCB9ID0gdC5nZXRDb250ZXh0KCk7XG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZXRUb2tlbih0KTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkudHJlbGxvLmNvbS8xL2JvYXJkcy8ke2JvYXJkSWR9L2FjdGlvbnM/bGltaXQ9MTAwMCZmaWx0ZXI9dXBkYXRlQ2FyZDppZExpc3QsY3JlYXRlQ2FyZCZtZW1iZXI9ZmFsc2UmbWVtYmVyQ3JlYXRvcj1mYWxzZSZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybClcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgaWYgKGUgJiYgZS5yZXNwb25zZSAmJiBlLnJlc3BvbnNlLnN0YXR1cyAmJiBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgICAgICAgc2V0VG9rZW4odCwgdW5kZWZpbmVkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG59O1xuXG5cbmV4cG9ydCBjb25zdCBnZXRDYXJkQWN0aW9ucyA9IGFzeW5jICh0KTogUHJvbWlzZTxDYXJkQWN0aW9uW10+ID0+IHtcbiAgICBjb25zdCB7IGNhcmQ6IGNhcmRJZCB9ID0gdC5nZXRDb250ZXh0KCk7XG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCBnZXRUb2tlbih0KTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkudHJlbGxvLmNvbS8xL2NhcmRzLyR7Y2FyZElkfS9hY3Rpb25zP2ZpbHRlcj11cGRhdGVDYXJkOmlkTGlzdCxjcmVhdGVDYXJkLGNvcHlDYXJkLGVtYWlsQ2FyZCZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAoZSAmJiBlLnJlc3BvbnNlICYmIGUucmVzcG9uc2Uuc3RhdHVzICYmIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHNldFRva2VuKHQsIHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRMaXN0cyA9IGFzeW5jICh0KTogUHJvbWlzZTxMaXN0W10+ID0+IHtcbiAgICBjb25zdCB7IGJvYXJkOiBib2FyZElkIH0gPSB0LmdldENvbnRleHQoKTtcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGdldFRva2VuKHQpO1xuICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS50cmVsbG8uY29tLzEvYm9hcmRzLyR7Ym9hcmRJZH0vbGlzdHM/Y2FyZHM9bm9uZSZmaWx0ZXI9b3BlbiZrZXk9JHtrZXl9JnRva2VuPSR7dG9rZW59YDtcbiAgICByZXR1cm4gYXhpb3MuZ2V0KHVybCkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5kYXRhKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgICBpZiAoZSAmJiBlLnJlc3BvbnNlICYmIGUucmVzcG9uc2Uuc3RhdHVzICYmIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgIHNldFRva2VuKHQsIHVuZGVmaW5lZCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBb0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/trello-util.ts\n");

/***/ }),

/***/ "./src/util.ts":
/*!*********************!*\
  !*** ./src/util.ts ***!
  \*********************/
/*! exports provided: truncate, getHumanReadableTime, getMinutesRemaining, getColor, getRunningSlas, getEndTime, getStartTime, getUpdatedSlaData, updateConfigs, getActionsPerCard, generateUuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"truncate\", function() { return truncate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHumanReadableTime\", function() { return getHumanReadableTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMinutesRemaining\", function() { return getMinutesRemaining; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColor\", function() { return getColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRunningSlas\", function() { return getRunningSlas; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEndTime\", function() { return getEndTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStartTime\", function() { return getStartTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUpdatedSlaData\", function() { return getUpdatedSlaData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateConfigs\", function() { return updateConfigs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getActionsPerCard\", function() { return getActionsPerCard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateUuid\", function() { return generateUuid; });\n/* harmony import */ var _trello_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trello-util */ \"./src/trello-util.ts\");\n\nconst truncate = (str, n, shouldEllipse) => (str.length > n) ? str.substr(0, n - 1) + `${shouldEllipse ? '&hellip;' : ''}` : str;\nconst getHumanReadableTime = (realMinutes) => {\n    const isNegative = realMinutes < 0;\n    const minutes = isNegative ? realMinutes * -1 : realMinutes;\n    const negativeSign = isNegative ? '-' : '';\n    const MINUTES = 'min';\n    const HOURS = 'h';\n    const DAYS = 'd';\n    if (minutes < 60) {\n        return `${negativeSign}${minutes}${MINUTES}`;\n    }\n    if (minutes < 1440) {\n        const hours = Math.floor(minutes / 60);\n        const hoursString = hours > 0 ? `${hours}${HOURS}` : '';\n        const remainingMinutes = minutes - 60 * hours;\n        const minutesString = remainingMinutes > 0 ? `${remainingMinutes}${MINUTES}` : '';\n        const spacer = hoursString && minutesString ? ' ' : '';\n        return `${negativeSign}${hoursString}${spacer}${minutesString}`;\n    }\n    const days = Math.floor(minutes / 1440);\n    const daysString = days > 0 ? `${days}${DAYS}` : '';\n    const remainingMinutes = minutes - days * 1440;\n    const remainingHours = Math.floor(remainingMinutes / 60);\n    const hoursString = remainingHours > 0 ? `${remainingHours}${HOURS}` : '';\n    const spacer = daysString && hoursString ? ' ' : '';\n    return `${negativeSign}${daysString}${spacer}${hoursString}`;\n};\nconst getMinutesRemaining = (startTime, maybeEndTime, config) => {\n    const endTime = maybeEndTime ? maybeEndTime : moment().valueOf();\n    const minutesElapsed = Math.floor((endTime - startTime) / 1000 / 60);\n    const minutesRemaining = config.time - minutesElapsed;\n    return minutesRemaining;\n};\nconst getColor = (minutesRemaining, isComplete) => {\n    if (isComplete) {\n        return 'grey';\n    }\n    ;\n    if (minutesRemaining < 0) {\n        return 'red';\n    }\n    else if (minutesRemaining < 60) {\n        return 'yellow';\n    }\n    return 'green';\n};\nconst getRunningSlas = (data, configs, detailed) => {\n    const runningSlas = [];\n    const completeSlas = [];\n    configs.forEach((config) => {\n        if (data[config.id]) {\n            const { startTime, endTime } = data[config.id];\n            if (startTime && !endTime) {\n                runningSlas.push({\n                    dynamic: function () {\n                        const minutesRemaining = getMinutesRemaining(startTime, endTime, config);\n                        const humanReadable = getHumanReadableTime(minutesRemaining);\n                        return Object.assign(Object.assign(Object.assign({ text: humanReadable, color: getColor(minutesRemaining, false) }, (detailed ? { title: `${config.name} - Ongoing` } : {})), (!detailed ? { icon: `${window.location}img/stopwatch.svg` } : {})), { refresh: 60 });\n                    }\n                });\n            }\n            if (startTime && endTime && detailed) {\n                const minutesRemaining = getMinutesRemaining(startTime, endTime, config);\n                const humanReadable = getHumanReadableTime(minutesRemaining);\n                completeSlas.push({\n                    text: humanReadable,\n                    color: getColor(minutesRemaining, true),\n                    title: `${config.name} - stopped`,\n                });\n            }\n        }\n    });\n    // We want the complete SLAs to come after the running ones\n    const allSlas = runningSlas.concat(completeSlas);\n    return allSlas;\n};\nconst getEndTime = (actions, endCondition, startTime) => {\n    let endTime = undefined;\n    actions.forEach((action) => {\n        if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].updateCard) {\n            if (action.data.listAfter.id === endCondition.id &&\n                (!endTime || moment(action.date).valueOf() < endTime) &&\n                moment(action.date).valueOf() > startTime) {\n                endTime = moment(action.date).valueOf();\n            }\n        }\n    });\n    return endTime;\n};\nconst wasCreatedInThisList = (action, expectedId) => {\n    if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].createCard || action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].copyCard || action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].emailCard) {\n        return action.data.list.id === expectedId;\n    }\n    return false;\n};\nconst wasUpdatedInThisList = (action, expectedId) => {\n    if (action.type === _trello_util__WEBPACK_IMPORTED_MODULE_0__[\"CardActionType\"].updateCard) {\n        return action.data.listAfter.id === expectedId;\n    }\n    return false;\n};\nconst getStartTime = (actions, startCondition) => {\n    let startTime = undefined;\n    actions.forEach((action) => {\n        if (wasCreatedInThisList(action, startCondition.id)) {\n            startTime = moment(action.date).valueOf();\n        }\n        else if (wasUpdatedInThisList(action, startCondition.id) &&\n            (!startTime || (moment(action.date).valueOf() < startTime))) {\n            startTime = moment(action.date).valueOf();\n        }\n    });\n    return startTime;\n};\nconst getUpdatedSlaData = (actions, configs, slaMap) => {\n    const updatedSlaMap = slaMap;\n    let hasChanged = false;\n    configs.forEach(config => {\n        const { id, startCondition, endCondition } = config;\n        if (!updatedSlaMap[id]) {\n            updatedSlaMap[id] = {};\n        }\n        const { startTime = undefined, endTime = undefined } = updatedSlaMap[id];\n        // We always recalculate start times and end times, in case the config has been edited.\n        const newStartTime = getStartTime(actions, startCondition);\n        const startTimeHasChanged = newStartTime !== startTime;\n        const newEndTime = startTime || newStartTime ? getEndTime(actions, endCondition, startTime || newStartTime) : undefined;\n        const endTimeHasChanged = newEndTime !== endTime;\n        if (startTimeHasChanged) {\n            hasChanged = true;\n            updatedSlaMap[id].startTime = newStartTime;\n        }\n        if (endTimeHasChanged) {\n            hasChanged = true;\n            updatedSlaMap[id].endTime = newEndTime;\n        }\n    });\n    return hasChanged ? updatedSlaMap : undefined;\n};\n// Find and remove any data from configs that have been since-deleted\nconst getSlaDataWithRemovals = (configs, slaMap) => {\n    const keys = Object.keys(slaMap);\n    if (keys.length === 0) {\n        return undefined;\n    }\n    const configIds = configs.map(config => config.id);\n    let removed = undefined;\n    keys.forEach(key => {\n        if (configIds.indexOf(key) === -1) {\n            removed = true;\n            delete slaMap[key];\n        }\n    });\n    return removed ? slaMap : undefined;\n};\nconst updateConfigs = (t, configs, slaMap) => {\n    Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"getCardActions\"])(t).then((actions) => {\n        const updatedSlaData = getUpdatedSlaData(actions, configs, slaMap);\n        if (updatedSlaData) {\n            const slaDataWithRemovals = getSlaDataWithRemovals(configs, updatedSlaData);\n            const result = slaDataWithRemovals ? slaDataWithRemovals : updatedSlaData;\n            Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setSlaData\"])(t, result);\n        }\n        else {\n            const slaDataWithRemovals = getSlaDataWithRemovals(configs, slaMap);\n            if (slaDataWithRemovals) {\n                Object(_trello_util__WEBPACK_IMPORTED_MODULE_0__[\"setSlaData\"])(t, slaDataWithRemovals);\n            }\n        }\n    });\n};\nconst getActionsPerCard = (actions) => {\n    const map = {};\n    actions.forEach(action => {\n        if (map[action.data.card.id] === undefined) {\n            map[action.data.card.id] = [];\n        }\n        map[action.data.card.id].push(action);\n    });\n    return map;\n};\n// https://gist.github.com/jed/982883\nconst generateUuid = function () { return (\"\" + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/1|0/g, function () { return (0 | Math.random() * 16).toString(16); }); };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/util.ts\n");

/***/ })

/******/ });